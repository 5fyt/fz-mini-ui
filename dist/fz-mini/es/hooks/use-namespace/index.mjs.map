{"version":3,"file":"index.mjs","sources":["../../../../../packages/hooks/use-namespace/index.ts"],"sourcesContent":["import { ref } from 'vue'\nconst statePrefix = 'is-'\n//规则化生成class类名\nconst _bem = (\n  namespace: string,\n  block: string,\n  blockSuffix: string,\n  element: string,\n  modifier: string\n) => {\n  let cls = `${namespace}-${block}`\n  if (blockSuffix) {\n    cls += `-${blockSuffix}`\n  }\n  if (element) {\n    cls += `__${element}`\n  }\n  if (modifier) {\n    cls += `--${modifier}`\n  }\n  return cls\n}\nexport const useNamespace = (block: string) => {\n  const namespace = ref('fz')\n  const b = (blockSuffix = '') =>\n    _bem(namespace.value, block, blockSuffix, '', '')\n  const e = (element?: string) => {\n    element ? _bem(namespace.value, block, '', element, '') : ''\n  }\n  const m = (modifier?: string) => {\n    modifier ? _bem(namespace.value, block, '', '', modifier) : ''\n  }\n  const be = (blockSuffix?: string, element?: string) => {\n    blockSuffix && element\n      ? _bem(namespace.value, block, blockSuffix, element, '')\n      : ''\n  }\n  const bm = (blockSuffix?: string, modifier?: string) => {\n    blockSuffix && modifier\n      ? _bem(namespace.value, block, blockSuffix, '', modifier)\n      : ''\n  }\n  const em = (element?: string, modifier?: string) => {\n    element && modifier\n      ? _bem(namespace.value, block, '', element, modifier)\n      : ''\n  }\n  const bem = (blockSuffix?: string, element?: string, modifier?: string) => {\n    blockSuffix && element && modifier\n      ? _bem(namespace.value, block, blockSuffix, element, modifier)\n      : ''\n  }\n  const is: {\n    (name: string, state: boolean | undefined): string\n    (name: string): string\n  } = (name: string, ...args: [boolean | undefined] | []) => {\n    const state = args.length >= 1 ? args[0]! : true\n    return name && state ? `${statePrefix}${name}` : ''\n  }\n  return {\n    b,\n    e,\n    m,\n    be,\n    em,\n    bm,\n    bem,\n    is,\n  }\n}\n"],"names":[],"mappings":"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"}